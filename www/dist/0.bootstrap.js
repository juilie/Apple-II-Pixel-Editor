(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/a2_pix.js":
/*!************************!*\
  !*** ../pkg/a2_pix.js ***!
  \************************/
/*! exports provided: __wbg_set_wasm, greet, bytes_to_wav, __wbg_alert_236019685a18aa89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _a2_pix_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./a2_pix_bg.wasm */ \"../pkg/a2_pix_bg.wasm\");\n/* harmony import */ var _a2_pix_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./a2_pix_bg.js */ \"../pkg/a2_pix_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return _a2_pix_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"greet\", function() { return _a2_pix_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"greet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"bytes_to_wav\", function() { return _a2_pix_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"bytes_to_wav\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_alert_236019685a18aa89\", function() { return _a2_pix_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_alert_236019685a18aa89\"]; });\n\n\n\nObject(_a2_pix_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"])(_a2_pix_bg_wasm__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n//# sourceURL=webpack:///../pkg/a2_pix.js?");

/***/ }),

/***/ "../pkg/a2_pix_bg.js":
/*!***************************!*\
  !*** ../pkg/a2_pix_bg.js ***!
  \***************************/
/*! exports provided: __wbg_set_wasm, greet, bytes_to_wav, __wbg_alert_236019685a18aa89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return __wbg_set_wasm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"greet\", function() { return greet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bytes_to_wav\", function() { return bytes_to_wav; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_alert_236019685a18aa89\", function() { return __wbg_alert_236019685a18aa89; });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} s\n*/\nfunction greet(s) {\n    const ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.greet(ptr0, len0);\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {Uint8Array} bytes\n* @returns {Uint8Array}\n*/\nfunction bytes_to_wav(bytes) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.bytes_to_wav(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction __wbg_alert_236019685a18aa89(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../www/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../pkg/a2_pix_bg.js?");

/***/ }),

/***/ "../pkg/a2_pix_bg.wasm":
/*!*****************************!*\
  !*** ../pkg/a2_pix_bg.wasm ***!
  \*****************************/
/*! exports provided: memory, greet, bytes_to_wav, __wbindgen_malloc, __wbindgen_realloc, __wbindgen_add_to_stack_pointer, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./a2_pix_bg.js */ \"../pkg/a2_pix_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/a2_pix_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var a2_pix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! a2-pix */ \"../pkg/a2_pix.js\");\n\nlet mouseDown = false;\n// Set initial pixel size and color\nconst PIXEL_SIZE = 1;\nlet currentColor = \"#000\";\n\nconst thresholdSlider = document.getElementById(\"threshold\");\nlet L_THRESHOLD = thresholdSlider.value;\n\nthresholdSlider.addEventListener(\"change\", e => {\n    L_THRESHOLD = e.target.value;\n    drawImage();\n})\n\nconst canvas = document.getElementById(\"pixelCanvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nfunction pixelsToWav(pixelArray) {\n    const pixelBytes = pixelsToBytes(pixelArray);\n    const pixelLoad = pixelsToMemory(pixelBytes);\n\n    return a2_pix__WEBPACK_IMPORTED_MODULE_0__[\"bytes_to_wav\"](pixelLoad);\n}\n\nfunction pixelsToBytes(pixelArray) {\n    let screen = [];\n    for (let i = 0; i < pixelArray.length; i += 7) {\n        let byte = 0;\n        for (let j = 0; j < 7; j++) {\n            byte += pixelArray[i + j] << j;\n        }\n        screen.push(byte);\n    }\n    return screen;\n}\n\nfunction pixelsToMemory(pixelBytes) {\n    let mem = new Array(8192).fill(0);\n    let i = 0;\n    for (let band = 0; band < 3; band++) {\n        for (let block_row = 0; block_row < 8; block_row++) {\n            for (let pixel_row = 0; pixel_row < 8; pixel_row++) {\n                for (let block_column = 0; block_column < 40; block_column++) {\n                    let mem_offset = band * 0x28 + block_row * 0x80 + pixel_row * 0x400 + block_column;\n                    mem[mem_offset] = pixelBytes[i];\n                    i++;\n                }\n            }\n        }\n    }\n    return mem;\n}\n\n\nfunction drawImage() {\n    const imgSrc = document.getElementById(\"imgFile\").files[0]\n    const imageUrl = URL.createObjectURL(imgSrc);\n    const img = new Image();\n    img.src = imageUrl;\n\n    img.onload = () => {\n        if (img.width > img.height) {\n            ctx.drawImage(img, 0, 0, canvas.width, (canvas.width*img.height)/img.width)\n        } else {\n            const newWidth = (canvas.width*img.width)/img.height;\n            const center = (canvas.width/2) - (newWidth / 2);\n            ctx.drawImage(img, center,0, newWidth, canvas.width)\n            \n        }\n\n        imageToBlackAndWhite()\n    };\n}\n\nfunction imageToBlackAndWhite() {\n    \n    let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let data = imageData.data\n\n    for (let pixel = 0; pixel < data.length; pixel+=4) {\n        const pixelData = data.slice(pixel, pixel+4);\n        const newPixel = RGBAToHSLA(...pixelData);\n        const L = newPixel[2];\n        console.log(L_THRESHOLD);\n        if (L > L_THRESHOLD) {\n            data[pixel] = 255\n            data[pixel+1] = 255\n            data[pixel+2] = 255\n            data[pixel+3] = 255\n        }\n        else {\n            data[pixel] = 0\n            data[pixel+1] = 0\n            data[pixel+2] = 0\n            data[pixel+3] = 255\n        }\n    }\n    ctx.putImageData(imageData, 0, 0)\n}\n\nconst RGBAToHSLA = (r, g, b, a) => {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    const l = Math.max(r, g, b);\n    const s = l - Math.min(r, g, b);\n    const h = s\n      ? l === r\n        ? (g - b) / s\n        : l === g\n        ? 2 + (b - r) / s\n        : 4 + (r - g) / s\n      : 0;\n    return [\n      60 * h < 0 ? 60 * h + 360 : 60 * h,\n      100 * (s ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0),\n      (100 * (2 * l - s)) / 2, a\n    ];\n  };\n\n// Function to get pixel array\nfunction getPixelArray() {\n    const pixelArray = [];\n    for (let y = 0; y < canvas.height; y += PIXEL_SIZE) {\n        for (let x = 0; x < canvas.width; x += PIXEL_SIZE) {\n            const pixelData = ctx.getImageData(x, y, PIXEL_SIZE, PIXEL_SIZE).data;\n            const isPixelDrawn = pixelData.slice(0,3).some(value => value !== 0);\n            pixelArray.push(isPixelDrawn ? 1 : 0);\n        }\n    }\n    return pixelArray;\n}\n\n// Save button click event\nconst saveButton = document.getElementById(\"saveButton\");\nsaveButton.addEventListener(\"click\", function () {\n    const pixelArray = getPixelArray();\n\n    let wavData = pixelsToWav(pixelArray);\n\n    const wavBlob = new Blob([wavData], {type: \"audio/wav\"} );\n    const wavBlobURL = URL.createObjectURL(wavBlob);\n\n    const audio = new Audio(wavBlobURL);\n    audio.play();\n});\n\n\nconst submitImage = document.getElementById(\"submitImage\");\nsubmitImage.addEventListener(\"click\", () => {\n    drawImage();\n})\n\n// Handle mouse click events\ncanvas.addEventListener(\"mousedown\", function (event) {\n    mouseDown = true\n    const x = Math.floor(event.offsetX / PIXEL_SIZE) * PIXEL_SIZE;\n    const y = Math.floor(event.offsetY / PIXEL_SIZE) * PIXEL_SIZE;\n\n    ctx.fillStyle = currentColor;\n    ctx.fillRect(x, y, PIXEL_SIZE, PIXEL_SIZE);\n});\n\ndocument.body.addEventListener(\"mouseup\", () => {\n    mouseDown = false\n})\n\ncanvas.addEventListener(\"mousemove\", function (event) {\n    if (mouseDown) {\n        const x = Math.floor(event.offsetX / PIXEL_SIZE) * PIXEL_SIZE;\n        const y = Math.floor(event.offsetY / PIXEL_SIZE) * PIXEL_SIZE;\n\n        // console.log(x / pixelSize, y / pixelSize);\n\n        ctx.fillStyle = currentColor;\n        ctx.fillRect(x, y, PIXEL_SIZE, PIXEL_SIZE);\n        ctx.fillRect(x+ PIXEL_SIZE, y, PIXEL_SIZE, PIXEL_SIZE);\n        ctx.fillRect(x - PIXEL_SIZE, y, PIXEL_SIZE, PIXEL_SIZE);\n        ctx.fillRect(x+ 2* PIXEL_SIZE, y, PIXEL_SIZE, PIXEL_SIZE);\n        ctx.fillRect(x - 2* PIXEL_SIZE, y, PIXEL_SIZE, PIXEL_SIZE);\n        ctx.fillRect(x, y + PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);\n        ctx.fillRect(x, y - PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);\n        ctx.fillRect(x, y + 2*PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);\n        ctx.fillRect(x, y - 2*PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);\n    }\n})\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ })

}]);